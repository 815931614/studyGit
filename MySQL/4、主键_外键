主键(PRI)and自增长(auto_increment)
    使用规制
        1、只能有一个主键字段
        2、所带约束:不允许重复，且不能为NULL
        3、KEY标志：PRI
        4、通常设置记录编号字段id，能唯一锁定一条记录



    创建
        创建表添加主键
            createt table tableName(
                id int primary key auto_increment
            )auto_increment=10000;设置自增长起始值


            createt table tableName(
                id int auto_increment,
                primary key(id)
            ),charset=utf8,auto_increment=10000;设置自增长起始值

            已有表添加主键
            alter table 表名 add parimary key(id);


    已有表操作自增长属性
        1、已有表添加自增长属性
            alter table 表名 modify id int auto_increment;

        2、已有表重新指定起始值
            alter table 表名 auto_increment=20000;


    删除
        1、删除自增长属性(modify)
            alter table 表名 modify id int;
        2、删除主键索引(自增长是配合主键使用的，必须先删除自增属性)
            alter table 表名 drop primary key;


外键(foreign key)
    定义
        让当前表字段的值在另一个表的范围内选择

    语法
        foreign key(参考字段名)
        references 主表(被参考字段名)
        on delete级联动作
        on update级联动作



    使用规则
        1、主表、从表字段数据类型要一致
        2、主表被参考字段： key的一种，一般为主键

    示例：
        表1、缴费信息表（财务）
            id        姓名      班级      缴费金额
             1       唐伯虎     AID1       300
             2       点秋香     AID1       300
             3       祝枝山     AID1       300
            create table master(
                id int primary key auto_increment,
                name varchar(20),
                class char(7),
                money decimal(10,2)
            )charset=utf8 ;
            insert into master values(1,'唐伯虎','AID1',300),
            (2,'点秋香','AID1',300),
            (3,'祝枝山','AID1',300);

        表2、学生信息表(班主任)--做外键关联
            id      姓名      缴费金额
            1       唐伯虎       300
            2       点秋香       300

            create table slave(
                stu_id int,
                name varchar(20),
                money decimal(10,2),
                foreign key(stu_id) references mas
                ter(id)
                on delete cascade on update cascade
            );
            insert into slave values(1,'唐伯虎',300),
            (2,'点秋香',300),
            (3,'祝枝山',300);


        删除外键:
            alter table 表名 drop foreign key 外键名;
            外键名： show create table 表名;


    级联动作
        cascade
            数据级联删除，更新(参考字段)
        restrict(默认)
            从表有相关记录，不允许主表操作
        set null
            主表删除、更新，从表相关联记录字段值为NULL
            on delete set null on update set null
    外键的作用
        **保持数据一致性，完整性。**主要目的是控制存储在外键表中的数据。 使两张表形成关联，外键只能引用外表中的列的值或使用空值

    外键约束
        MySQL外键约束（FOREIGN KEY）用来在两个表的数据之间建立链接，它可以是一列或者多列。一个表可以有一个或多个外键。
        外键是表的一个字段，不是本表的主键，但对应另一个表的主键。定义外键后，不允许删除另一个表中具有关联关系的行。

            主表（父表）

                对于两个具有关联关系的表而言，相关联字段中主键所在的表就是主表。

                被引用的表叫主表（父表）。

            从表（子表）

                对于两个具有关联关系的表而言，相关联字段中外键所在的表就是从表。

                定义了外键的表叫从表（子表）。

    外键约束的作用：

        阻止执行
            从表插入新行，其外键值不是主表的主键值便阻止插入；
            从表修改外键值，新值不是主表的主键值便阻止修改；
            主表删除行，其主键值在从表里存在便阻止删除(要想删除，必须先删除从表的相关行)；
            主表修改主键值，旧值在从表里存在便阻止修改(要想修改，必须先删除从表的相关行)。


        级联执行
            主表删除行，连带从表的相关行一起删除；
            主表修改主键值，连带从表相关行的外键值一起修改。两种方法提供给用户选择。无论选取哪种方法，从表里都不会有多余行。从另一个角度理解，用拒绝同一事物在从表中的标志与主表不一致来实现与主表中的标志一致。
            两种实现方法，通过下面方式选择：

            界面：设级联更新、级联删除两个选择方框，选取则级联执行、不选取则阻止执行；
            命令：设E)kSCM)E、RESTRICT两个可选项，CASCADE为级联执行、RESTRICT为阻止执行。
























